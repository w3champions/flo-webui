// source: game.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var player_pb = require('./player_pb.js');
goog.object.extend(proto, player_pb);
var node_pb = require('./node_pb.js');
goog.object.extend(proto, node_pb);
goog.exportSymbol('proto.game.Computer', null, global);
goog.exportSymbol('proto.game.Game', null, global);
goog.exportSymbol('proto.game.GameEntry', null, global);
goog.exportSymbol('proto.game.GameStatus', null, global);
goog.exportSymbol('proto.game.Map', null, global);
goog.exportSymbol('proto.game.MapChecksumImportItem', null, global);
goog.exportSymbol('proto.game.MapForce', null, global);
goog.exportSymbol('proto.game.MapPlayer', null, global);
goog.exportSymbol('proto.game.Race', null, global);
goog.exportSymbol('proto.game.Slot', null, global);
goog.exportSymbol('proto.game.SlotClientStatus', null, global);
goog.exportSymbol('proto.game.SlotSettings', null, global);
goog.exportSymbol('proto.game.SlotStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game.Game = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.game.Game.repeatedFields_, null);
};
goog.inherits(proto.game.Game, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game.Game.displayName = 'proto.game.Game';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game.GameEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game.GameEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game.GameEntry.displayName = 'proto.game.GameEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game.Slot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game.Slot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game.Slot.displayName = 'proto.game.Slot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game.SlotSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game.SlotSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game.SlotSettings.displayName = 'proto.game.SlotSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game.Map = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.game.Map.repeatedFields_, null);
};
goog.inherits(proto.game.Map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game.Map.displayName = 'proto.game.Map';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game.MapPlayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game.MapPlayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game.MapPlayer.displayName = 'proto.game.MapPlayer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game.MapForce = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game.MapForce, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game.MapForce.displayName = 'proto.game.MapForce';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game.MapChecksumImportItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game.MapChecksumImportItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game.MapChecksumImportItem.displayName = 'proto.game.MapChecksumImportItem';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.game.Game.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game.Game.prototype.toObject = function(opt_includeInstance) {
  return proto.game.Game.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game.Game} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.Game.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    map: (f = msg.getMap()) && proto.game.Map.toObject(includeInstance, f),
    slotsList: jspb.Message.toObjectList(msg.getSlotsList(),
    proto.game.Slot.toObject, includeInstance),
    node: (f = msg.getNode()) && node_pb.Node.toObject(includeInstance, f),
    isPrivate: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    secret: (f = msg.getSecret()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    isLive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    numPlayers: jspb.Message.getFieldWithDefault(msg, 10, 0),
    maxPlayers: jspb.Message.getFieldWithDefault(msg, 11, 0),
    randomSeed: jspb.Message.getFieldWithDefault(msg, 12, 0),
    createdBy: (f = msg.getCreatedBy()) && player_pb.PlayerRef.toObject(includeInstance, f),
    startedAt: (f = msg.getStartedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endedAt: (f = msg.getEndedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    maskPlayerNames: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    gameVersion: (f = msg.getGameVersion()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    enablePingEqualizer: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    floTvDelayOverrideSecs: (f = msg.getFloTvDelayOverrideSecs()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game.Game}
 */
proto.game.Game.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game.Game;
  return proto.game.Game.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game.Game} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game.Game}
 */
proto.game.Game.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.game.GameStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = new proto.game.Map;
      reader.readMessage(value,proto.game.Map.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    case 5:
      var value = new proto.game.Slot;
      reader.readMessage(value,proto.game.Slot.deserializeBinaryFromReader);
      msg.addSlots(value);
      break;
    case 6:
      var value = new node_pb.Node;
      reader.readMessage(value,node_pb.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPrivate(value);
      break;
    case 8:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLive(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumPlayers(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxPlayers(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRandomSeed(value);
      break;
    case 13:
      var value = new player_pb.PlayerRef;
      reader.readMessage(value,player_pb.PlayerRef.deserializeBinaryFromReader);
      msg.setCreatedBy(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartedAt(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndedAt(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMaskPlayerNames(value);
      break;
    case 19:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setGameVersion(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnablePingEqualizer(value);
      break;
    case 21:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setFloTvDelayOverrideSecs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game.Game.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game.Game.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game.Game} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.Game.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.game.Map.serializeBinaryToWriter
    );
  }
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.game.Slot.serializeBinaryToWriter
    );
  }
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      node_pb.Node.serializeBinaryToWriter
    );
  }
  f = message.getIsPrivate();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getIsLive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getNumPlayers();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getMaxPlayers();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getRandomSeed();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getCreatedBy();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      player_pb.PlayerRef.serializeBinaryToWriter
    );
  }
  f = message.getStartedAt();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndedAt();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMaskPlayerNames();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getGameVersion();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getEnablePingEqualizer();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getFloTvDelayOverrideSecs();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.game.Game.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.game.Game.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional GameStatus status = 3;
 * @return {!proto.game.GameStatus}
 */
proto.game.Game.prototype.getStatus = function() {
  return /** @type {!proto.game.GameStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.game.GameStatus} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Map map = 4;
 * @return {?proto.game.Map}
 */
proto.game.Game.prototype.getMap = function() {
  return /** @type{?proto.game.Map} */ (
    jspb.Message.getWrapperField(this, proto.game.Map, 4));
};


/**
 * @param {?proto.game.Map|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setMap = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasMap = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Slot slots = 5;
 * @return {!Array<!proto.game.Slot>}
 */
proto.game.Game.prototype.getSlotsList = function() {
  return /** @type{!Array<!proto.game.Slot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.game.Slot, 5));
};


/**
 * @param {!Array<!proto.game.Slot>} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setSlotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.game.Slot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.game.Slot}
 */
proto.game.Game.prototype.addSlots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.game.Slot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearSlotsList = function() {
  return this.setSlotsList([]);
};


/**
 * optional node.Node node = 6;
 * @return {?proto.node.Node}
 */
proto.game.Game.prototype.getNode = function() {
  return /** @type{?proto.node.Node} */ (
    jspb.Message.getWrapperField(this, node_pb.Node, 6));
};


/**
 * @param {?proto.node.Node|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasNode = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool is_private = 7;
 * @return {boolean}
 */
proto.game.Game.prototype.getIsPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setIsPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional google.protobuf.Int32Value secret = 8;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.game.Game.prototype.getSecret = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 8));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setSecret = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearSecret = function() {
  return this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool is_live = 9;
 * @return {boolean}
 */
proto.game.Game.prototype.getIsLive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setIsLive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 num_players = 10;
 * @return {number}
 */
proto.game.Game.prototype.getNumPlayers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setNumPlayers = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 max_players = 11;
 * @return {number}
 */
proto.game.Game.prototype.getMaxPlayers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setMaxPlayers = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 random_seed = 12;
 * @return {number}
 */
proto.game.Game.prototype.getRandomSeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setRandomSeed = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional player.PlayerRef created_by = 13;
 * @return {?proto.player.PlayerRef}
 */
proto.game.Game.prototype.getCreatedBy = function() {
  return /** @type{?proto.player.PlayerRef} */ (
    jspb.Message.getWrapperField(this, player_pb.PlayerRef, 13));
};


/**
 * @param {?proto.player.PlayerRef|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setCreatedBy = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearCreatedBy = function() {
  return this.setCreatedBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasCreatedBy = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Timestamp started_at = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.game.Game.prototype.getStartedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setStartedAt = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearStartedAt = function() {
  return this.setStartedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasStartedAt = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional google.protobuf.Timestamp ended_at = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.game.Game.prototype.getEndedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setEndedAt = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearEndedAt = function() {
  return this.setEndedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasEndedAt = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.game.Game.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.game.Game.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool mask_player_names = 18;
 * @return {boolean}
 */
proto.game.Game.prototype.getMaskPlayerNames = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setMaskPlayerNames = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional google.protobuf.StringValue game_version = 19;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.game.Game.prototype.getGameVersion = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 19));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setGameVersion = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearGameVersion = function() {
  return this.setGameVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasGameVersion = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool enable_ping_equalizer = 20;
 * @return {boolean}
 */
proto.game.Game.prototype.getEnablePingEqualizer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.setEnablePingEqualizer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional google.protobuf.Int32Value flo_tv_delay_override_secs = 21;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.game.Game.prototype.getFloTvDelayOverrideSecs = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 21));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.game.Game} returns this
*/
proto.game.Game.prototype.setFloTvDelayOverrideSecs = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Game} returns this
 */
proto.game.Game.prototype.clearFloTvDelayOverrideSecs = function() {
  return this.setFloTvDelayOverrideSecs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Game.prototype.hasFloTvDelayOverrideSecs = function() {
  return jspb.Message.getField(this, 21) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game.GameEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.game.GameEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game.GameEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.GameEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mapName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isPrivate: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isLive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    numPlayers: jspb.Message.getFieldWithDefault(msg, 7, 0),
    maxPlayers: jspb.Message.getFieldWithDefault(msg, 8, 0),
    node: (f = msg.getNode()) && node_pb.Node.toObject(includeInstance, f),
    createdBy: (f = msg.getCreatedBy()) && player_pb.PlayerRef.toObject(includeInstance, f),
    startedAt: (f = msg.getStartedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endedAt: (f = msg.getEndedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game.GameEntry}
 */
proto.game.GameEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game.GameEntry;
  return proto.game.GameEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game.GameEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game.GameEntry}
 */
proto.game.GameEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapName(value);
      break;
    case 4:
      var value = /** @type {!proto.game.GameStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPrivate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLive(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumPlayers(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxPlayers(value);
      break;
    case 9:
      var value = new node_pb.Node;
      reader.readMessage(value,node_pb.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 10:
      var value = new player_pb.PlayerRef;
      reader.readMessage(value,player_pb.PlayerRef.deserializeBinaryFromReader);
      msg.setCreatedBy(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartedAt(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndedAt(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game.GameEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game.GameEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game.GameEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.GameEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMapName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getIsPrivate();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsLive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getNumPlayers();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMaxPlayers();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      node_pb.Node.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      player_pb.PlayerRef.serializeBinaryToWriter
    );
  }
  f = message.getStartedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndedAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.game.GameEntry.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.game.GameEntry.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string map_name = 3;
 * @return {string}
 */
proto.game.GameEntry.prototype.getMapName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.setMapName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional GameStatus status = 4;
 * @return {!proto.game.GameStatus}
 */
proto.game.GameEntry.prototype.getStatus = function() {
  return /** @type {!proto.game.GameStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.game.GameStatus} value
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional bool is_private = 5;
 * @return {boolean}
 */
proto.game.GameEntry.prototype.getIsPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.setIsPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_live = 6;
 * @return {boolean}
 */
proto.game.GameEntry.prototype.getIsLive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.setIsLive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 num_players = 7;
 * @return {number}
 */
proto.game.GameEntry.prototype.getNumPlayers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.setNumPlayers = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 max_players = 8;
 * @return {number}
 */
proto.game.GameEntry.prototype.getMaxPlayers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.setMaxPlayers = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional node.Node node = 9;
 * @return {?proto.node.Node}
 */
proto.game.GameEntry.prototype.getNode = function() {
  return /** @type{?proto.node.Node} */ (
    jspb.Message.getWrapperField(this, node_pb.Node, 9));
};


/**
 * @param {?proto.node.Node|undefined} value
 * @return {!proto.game.GameEntry} returns this
*/
proto.game.GameEntry.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.GameEntry.prototype.hasNode = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional player.PlayerRef created_by = 10;
 * @return {?proto.player.PlayerRef}
 */
proto.game.GameEntry.prototype.getCreatedBy = function() {
  return /** @type{?proto.player.PlayerRef} */ (
    jspb.Message.getWrapperField(this, player_pb.PlayerRef, 10));
};


/**
 * @param {?proto.player.PlayerRef|undefined} value
 * @return {!proto.game.GameEntry} returns this
*/
proto.game.GameEntry.prototype.setCreatedBy = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.clearCreatedBy = function() {
  return this.setCreatedBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.GameEntry.prototype.hasCreatedBy = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp started_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.game.GameEntry.prototype.getStartedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.game.GameEntry} returns this
*/
proto.game.GameEntry.prototype.setStartedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.clearStartedAt = function() {
  return this.setStartedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.GameEntry.prototype.hasStartedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp ended_at = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.game.GameEntry.prototype.getEndedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.game.GameEntry} returns this
*/
proto.game.GameEntry.prototype.setEndedAt = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.clearEndedAt = function() {
  return this.setEndedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.GameEntry.prototype.hasEndedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.game.GameEntry.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.game.GameEntry} returns this
*/
proto.game.GameEntry.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.GameEntry.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.game.GameEntry.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.game.GameEntry} returns this
*/
proto.game.GameEntry.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.GameEntry} returns this
 */
proto.game.GameEntry.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.GameEntry.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game.Slot.prototype.toObject = function(opt_includeInstance) {
  return proto.game.Slot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game.Slot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.Slot.toObject = function(includeInstance, msg) {
  var f, obj = {
    player: (f = msg.getPlayer()) && player_pb.PlayerRef.toObject(includeInstance, f),
    settings: (f = msg.getSettings()) && proto.game.SlotSettings.toObject(includeInstance, f),
    clientStatus: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game.Slot}
 */
proto.game.Slot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game.Slot;
  return proto.game.Slot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game.Slot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game.Slot}
 */
proto.game.Slot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new player_pb.PlayerRef;
      reader.readMessage(value,player_pb.PlayerRef.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    case 3:
      var value = new proto.game.SlotSettings;
      reader.readMessage(value,proto.game.SlotSettings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    case 4:
      var value = /** @type {!proto.game.SlotClientStatus} */ (reader.readEnum());
      msg.setClientStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game.Slot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game.Slot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game.Slot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.Slot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      player_pb.PlayerRef.serializeBinaryToWriter
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.game.SlotSettings.serializeBinaryToWriter
    );
  }
  f = message.getClientStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional player.PlayerRef player = 2;
 * @return {?proto.player.PlayerRef}
 */
proto.game.Slot.prototype.getPlayer = function() {
  return /** @type{?proto.player.PlayerRef} */ (
    jspb.Message.getWrapperField(this, player_pb.PlayerRef, 2));
};


/**
 * @param {?proto.player.PlayerRef|undefined} value
 * @return {!proto.game.Slot} returns this
*/
proto.game.Slot.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Slot} returns this
 */
proto.game.Slot.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Slot.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SlotSettings settings = 3;
 * @return {?proto.game.SlotSettings}
 */
proto.game.Slot.prototype.getSettings = function() {
  return /** @type{?proto.game.SlotSettings} */ (
    jspb.Message.getWrapperField(this, proto.game.SlotSettings, 3));
};


/**
 * @param {?proto.game.SlotSettings|undefined} value
 * @return {!proto.game.Slot} returns this
*/
proto.game.Slot.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game.Slot} returns this
 */
proto.game.Slot.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game.Slot.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SlotClientStatus client_status = 4;
 * @return {!proto.game.SlotClientStatus}
 */
proto.game.Slot.prototype.getClientStatus = function() {
  return /** @type {!proto.game.SlotClientStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.game.SlotClientStatus} value
 * @return {!proto.game.Slot} returns this
 */
proto.game.Slot.prototype.setClientStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game.SlotSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.game.SlotSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game.SlotSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.SlotSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    team: jspb.Message.getFieldWithDefault(msg, 1, 0),
    color: jspb.Message.getFieldWithDefault(msg, 2, 0),
    computer: jspb.Message.getFieldWithDefault(msg, 3, 0),
    handicap: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    race: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game.SlotSettings}
 */
proto.game.SlotSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game.SlotSettings;
  return proto.game.SlotSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game.SlotSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game.SlotSettings}
 */
proto.game.SlotSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTeam(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColor(value);
      break;
    case 3:
      var value = /** @type {!proto.game.Computer} */ (reader.readEnum());
      msg.setComputer(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHandicap(value);
      break;
    case 5:
      var value = /** @type {!proto.game.SlotStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {!proto.game.Race} */ (reader.readEnum());
      msg.setRace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game.SlotSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game.SlotSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game.SlotSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.SlotSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeam();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getColor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getComputer();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getHandicap();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getRace();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional int32 team = 1;
 * @return {number}
 */
proto.game.SlotSettings.prototype.getTeam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.SlotSettings} returns this
 */
proto.game.SlotSettings.prototype.setTeam = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 color = 2;
 * @return {number}
 */
proto.game.SlotSettings.prototype.getColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.SlotSettings} returns this
 */
proto.game.SlotSettings.prototype.setColor = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Computer computer = 3;
 * @return {!proto.game.Computer}
 */
proto.game.SlotSettings.prototype.getComputer = function() {
  return /** @type {!proto.game.Computer} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.game.Computer} value
 * @return {!proto.game.SlotSettings} returns this
 */
proto.game.SlotSettings.prototype.setComputer = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 handicap = 4;
 * @return {number}
 */
proto.game.SlotSettings.prototype.getHandicap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.SlotSettings} returns this
 */
proto.game.SlotSettings.prototype.setHandicap = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional SlotStatus status = 5;
 * @return {!proto.game.SlotStatus}
 */
proto.game.SlotSettings.prototype.getStatus = function() {
  return /** @type {!proto.game.SlotStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.game.SlotStatus} value
 * @return {!proto.game.SlotSettings} returns this
 */
proto.game.SlotSettings.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional Race race = 6;
 * @return {!proto.game.Race}
 */
proto.game.SlotSettings.prototype.getRace = function() {
  return /** @type {!proto.game.Race} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.game.Race} value
 * @return {!proto.game.SlotSettings} returns this
 */
proto.game.SlotSettings.prototype.setRace = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.game.Map.repeatedFields_ = [9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game.Map.prototype.toObject = function(opt_includeInstance) {
  return proto.game.Map.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game.Map} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.Map.toObject = function(includeInstance, msg) {
  var f, obj = {
    sha1: msg.getSha1_asB64(),
    checksum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    author: jspb.Message.getFieldWithDefault(msg, 5, ""),
    path: jspb.Message.getFieldWithDefault(msg, 6, ""),
    width: jspb.Message.getFieldWithDefault(msg, 7, 0),
    height: jspb.Message.getFieldWithDefault(msg, 8, 0),
    playersList: jspb.Message.toObjectList(msg.getPlayersList(),
    proto.game.MapPlayer.toObject, includeInstance),
    forcesList: jspb.Message.toObjectList(msg.getForcesList(),
    proto.game.MapForce.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game.Map}
 */
proto.game.Map.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game.Map;
  return proto.game.Map.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game.Map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game.Map}
 */
proto.game.Map.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSha1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChecksum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 9:
      var value = new proto.game.MapPlayer;
      reader.readMessage(value,proto.game.MapPlayer.deserializeBinaryFromReader);
      msg.addPlayers(value);
      break;
    case 10:
      var value = new proto.game.MapForce;
      reader.readMessage(value,proto.game.MapForce.deserializeBinaryFromReader);
      msg.addForces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game.Map.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game.Map.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game.Map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.Map.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSha1_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChecksum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getPlayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.game.MapPlayer.serializeBinaryToWriter
    );
  }
  f = message.getForcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.game.MapForce.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes sha1 = 1;
 * @return {!(string|Uint8Array)}
 */
proto.game.Map.prototype.getSha1 = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes sha1 = 1;
 * This is a type-conversion wrapper around `getSha1()`
 * @return {string}
 */
proto.game.Map.prototype.getSha1_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSha1()));
};


/**
 * optional bytes sha1 = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSha1()`
 * @return {!Uint8Array}
 */
proto.game.Map.prototype.getSha1_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSha1()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.setSha1 = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 checksum = 2;
 * @return {number}
 */
proto.game.Map.prototype.getChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.setChecksum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.game.Map.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.game.Map.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string author = 5;
 * @return {string}
 */
proto.game.Map.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string path = 6;
 * @return {string}
 */
proto.game.Map.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 width = 7;
 * @return {number}
 */
proto.game.Map.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 height = 8;
 * @return {number}
 */
proto.game.Map.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated MapPlayer players = 9;
 * @return {!Array<!proto.game.MapPlayer>}
 */
proto.game.Map.prototype.getPlayersList = function() {
  return /** @type{!Array<!proto.game.MapPlayer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.game.MapPlayer, 9));
};


/**
 * @param {!Array<!proto.game.MapPlayer>} value
 * @return {!proto.game.Map} returns this
*/
proto.game.Map.prototype.setPlayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.game.MapPlayer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.game.MapPlayer}
 */
proto.game.Map.prototype.addPlayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.game.MapPlayer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.clearPlayersList = function() {
  return this.setPlayersList([]);
};


/**
 * repeated MapForce forces = 10;
 * @return {!Array<!proto.game.MapForce>}
 */
proto.game.Map.prototype.getForcesList = function() {
  return /** @type{!Array<!proto.game.MapForce>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.game.MapForce, 10));
};


/**
 * @param {!Array<!proto.game.MapForce>} value
 * @return {!proto.game.Map} returns this
*/
proto.game.Map.prototype.setForcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.game.MapForce=} opt_value
 * @param {number=} opt_index
 * @return {!proto.game.MapForce}
 */
proto.game.Map.prototype.addForces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.game.MapForce, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.game.Map} returns this
 */
proto.game.Map.prototype.clearForcesList = function() {
  return this.setForcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game.MapPlayer.prototype.toObject = function(opt_includeInstance) {
  return proto.game.MapPlayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game.MapPlayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.MapPlayer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    race: jspb.Message.getFieldWithDefault(msg, 3, 0),
    flags: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game.MapPlayer}
 */
proto.game.MapPlayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game.MapPlayer;
  return proto.game.MapPlayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game.MapPlayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game.MapPlayer}
 */
proto.game.MapPlayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRace(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFlags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game.MapPlayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game.MapPlayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game.MapPlayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.MapPlayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRace();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getFlags();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.game.MapPlayer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.MapPlayer} returns this
 */
proto.game.MapPlayer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 type = 2;
 * @return {number}
 */
proto.game.MapPlayer.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.MapPlayer} returns this
 */
proto.game.MapPlayer.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 race = 3;
 * @return {number}
 */
proto.game.MapPlayer.prototype.getRace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.MapPlayer} returns this
 */
proto.game.MapPlayer.prototype.setRace = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 flags = 4;
 * @return {number}
 */
proto.game.MapPlayer.prototype.getFlags = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.MapPlayer} returns this
 */
proto.game.MapPlayer.prototype.setFlags = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game.MapForce.prototype.toObject = function(opt_includeInstance) {
  return proto.game.MapForce.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game.MapForce} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.MapForce.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    flags: jspb.Message.getFieldWithDefault(msg, 2, 0),
    playerSet: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game.MapForce}
 */
proto.game.MapForce.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game.MapForce;
  return proto.game.MapForce.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game.MapForce} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game.MapForce}
 */
proto.game.MapForce.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFlags(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerSet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game.MapForce.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game.MapForce.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game.MapForce} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.MapForce.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFlags();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPlayerSet();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.game.MapForce.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.MapForce} returns this
 */
proto.game.MapForce.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 flags = 2;
 * @return {number}
 */
proto.game.MapForce.prototype.getFlags = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.MapForce} returns this
 */
proto.game.MapForce.prototype.setFlags = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 player_set = 3;
 * @return {number}
 */
proto.game.MapForce.prototype.getPlayerSet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.MapForce} returns this
 */
proto.game.MapForce.prototype.setPlayerSet = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game.MapChecksumImportItem.prototype.toObject = function(opt_includeInstance) {
  return proto.game.MapChecksumImportItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game.MapChecksumImportItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.MapChecksumImportItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    sha1: jspb.Message.getFieldWithDefault(msg, 1, ""),
    checksum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game.MapChecksumImportItem}
 */
proto.game.MapChecksumImportItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game.MapChecksumImportItem;
  return proto.game.MapChecksumImportItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game.MapChecksumImportItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game.MapChecksumImportItem}
 */
proto.game.MapChecksumImportItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSha1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game.MapChecksumImportItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game.MapChecksumImportItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game.MapChecksumImportItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game.MapChecksumImportItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSha1();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChecksum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string sha1 = 1;
 * @return {string}
 */
proto.game.MapChecksumImportItem.prototype.getSha1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.game.MapChecksumImportItem} returns this
 */
proto.game.MapChecksumImportItem.prototype.setSha1 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 checksum = 2;
 * @return {number}
 */
proto.game.MapChecksumImportItem.prototype.getChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.game.MapChecksumImportItem} returns this
 */
proto.game.MapChecksumImportItem.prototype.setChecksum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.game.SlotStatus = {
  SLOTSTATUSOPEN: 0,
  SLOTSTATUSCLOSED: 1,
  SLOTSTATUSOCCUPIED: 2
};

/**
 * @enum {number}
 */
proto.game.Race = {
  RACEHUMAN: 0,
  RACEORC: 1,
  RACENIGHTELF: 2,
  RACEUNDEAD: 3,
  RACERANDOM: 4
};

/**
 * @enum {number}
 */
proto.game.Computer = {
  COMPUTEREASY: 0,
  COMPUTERNORMAL: 1,
  COMPUTERINSANE: 2
};

/**
 * @enum {number}
 */
proto.game.SlotClientStatus = {
  SLOTCLIENTSTATUSPENDING: 0,
  SLOTCLIENTSTATUSCONNECTED: 1,
  SLOTCLIENTSTATUSLOADING: 2,
  SLOTCLIENTSTATUSLOADED: 3,
  SLOTCLIENTSTATUSDISCONNECTED: 4,
  SLOTCLIENTSTATUSLEFT: 5
};

/**
 * @enum {number}
 */
proto.game.GameStatus = {
  GAMESTATUSPREPARING: 0,
  GAMESTATUSCREATED: 1,
  GAMESTATUSRUNNING: 2,
  GAMESTATUSENDED: 3,
  GAMESTATUSPAUSED: 4,
  GAMESTATUSTERMINATED: 5
};

goog.object.extend(exports, proto.game);
